# Generated by Django 4.0.6 on 2022-08-07 06:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_minio_backend.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('test_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'school',
            },
        ),
        migrations.CreateModel(
            name='SchoolStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('std_id', models.CharField(blank=True, max_length=100, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, max_length=10, null=True)),
                ('image', models.FileField(blank=True, null=True, storage=django_minio_backend.models.MinioBackend(bucket_name='parikshana-media'), upload_to='teacher_images', verbose_name='Object Upload')),
            ],
            options={
                'db_table': 'school_student',
            },
        ),
        migrations.CreateModel(
            name='SchoolTeacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school_teacher_school', to='school_app.school')),
                ('standards', models.ManyToManyField(related_name='school_teacher_standards', to='test_app.standard')),
                ('subjects', models.ManyToManyField(related_name='school_teacher_subjects', to='test_app.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school_teacher_teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'school_teacher',
            },
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('standard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school_class_standard', to='test_app.standard')),
                ('students', models.ManyToManyField(blank=True, null=True, related_name='school_class_students', to='school_app.schoolstudent')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='school_class_subject', to='test_app.subject')),
                ('teachers', models.ManyToManyField(blank=True, null=True, related_name='school_class_teachers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'school_class',
            },
        ),
    ]
